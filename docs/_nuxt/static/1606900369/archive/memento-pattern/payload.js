__NUXT_JSONP__("/archive/memento-pattern", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C){return {data:[{page:{slug:"memento-pattern",title:"The Memento Pattern",desc:u,published:f,date:"2019-05-12T12:40",taxonomy:{category:["blog"],tag:["design patterns","behavioural"]},feed:{limit:10},twitterenable:f,twittercardoptions:"summary",articleenabled:d,musiceventenabled:d,orgaenabled:d,orga:{ratingValue:v},orgaratingenabled:d,eventenabled:d,personenabled:d,musicalbumenabled:d,productenabled:d,product:{ratingValue:v},restaurantenabled:d,restaurant:{acceptsReservations:"yes",priceRange:"$"},facebookenable:f,toc:[{id:w,depth:g,text:x},{id:y,depth:g,text:z},{id:A,depth:g,text:B}],body:{type:"root",children:[{type:b,tag:h,props:{id:w},children:[{type:b,tag:i,props:{ariaHidden:j,href:"#name-memento",tabIndex:k},children:[{type:b,tag:l,props:{className:[m,n]},children:[]}]},{type:a,value:x}]},{type:a,value:c},{type:b,tag:h,props:{id:y},children:[{type:b,tag:i,props:{ariaHidden:j,href:"#type-behavioural",tabIndex:k},children:[{type:b,tag:l,props:{className:[m,n]},children:[]}]},{type:a,value:z}]},{type:a,value:c},{type:b,tag:h,props:{id:A},children:[{type:b,tag:i,props:{ariaHidden:j,href:"#use-when-you-want-to",tabIndex:k},children:[{type:b,tag:l,props:{className:[m,n]},children:[]}]},{type:a,value:B}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Add undo functionality."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"From Wikipedia:"}]},{type:a,value:c},{type:b,tag:C,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:u}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Real World Example:"}]},{type:a,value:c},{type:b,tag:C,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Take the example of a text editor (i.e. originator), where whenever you perform some text the last text state is saved in memory (i.e. memento) so that you can get back to it and maybe get it restored using some action buttons (i.e. caretaker)."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Typescript Code Example:"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"First of all we have our memento object that will be able to hold the editor state"}]},{type:a,value:c},{type:b,tag:o,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"class EditorMemento { \n    constructor(protected content: string) {\n        \n    }\n\n    getContent() { \n        return this.content;\n    }\n}\n\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Then we have our editor i.e. originator that is going to use memento object"}]},{type:a,value:c},{type:b,tag:o,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"class Editior { \n    protected content: string = \"\";\n\n    type(words: string) { \n        this.content = this.content + words\n    }\n\n    getContent() { \n        return this.content;\n    }\n\n    save() { \n        return new EditorMemento(this.content);\n    }\n\n    restore(momento: EditorMemento) { \n        this.content = momento.getContent();\n    }\n\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"The two classes can be used as follows:"}]},{type:a,value:c},{type:b,tag:o,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"const editor = new Editor()\n\n\u002F\u002F Type some stuff\neditor.type('This is the first sentence.')\neditor.type('This is second.')\n\n\u002F\u002F Save the state to restore to : This is the first sentence. This is second.\nconst saved = editor.save()\n\n\u002F\u002F Type some more\neditor.type('And this is third.')\n\n\u002F\u002F Output: Content before Saving\nconsole.log(editor.getContent())\u002F\u002F This is the first sentence. This is second. And this is third.\n\n\u002F\u002F Restoring to last saved state\neditor.restore(saved)\n\nconsole.log(editor.getContent()) \u002F\u002F This is the first sentence. This is second.\n"}]}]}]},{type:a,value:c},{type:b,tag:"script",props:{async:f,src:"\u002F\u002Fjsfiddle.net\u002Fharps116\u002F6jscpng2\u002F12\u002Fembed\u002Fjs\u002F"},children:[]}]},dir:"\u002Farchive",path:"\u002Farchive\u002Fmemento-pattern",extension:".md",createdAt:"2020-11-24T08:50:03.333Z",updatedAt:"2020-11-28T16:07:18.568Z"}}],fetch:[],mutations:void 0}}("text","element","\n",false,"p",true,2,"h2","a","true",-1,"span","icon","icon-link","div","nuxt-content-highlight","pre","language-text","line-numbers","code","The memento pattern is a software design pattern that provides the ability to restore an object to its previous state (undo via rollback).",2.5,"name-memento","Name: Memento","type-behavioural","Type: Behavioural","use-when-you-want-to","Use when you want to:","blockquote")));