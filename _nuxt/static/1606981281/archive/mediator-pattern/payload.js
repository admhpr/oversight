__NUXT_JSONP__("/archive/mediator-pattern", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D){return {data:[{page:{slug:"mediator-pattern",title:"The Mediator Pattern",desc:o,published:f,date:"2019-05-07T08:24",taxonomy:{category:["blog"],tag:["design patterns","behavioural"]},feed:{limit:10},twitterenable:f,twittercardoptions:"summary",articleenabled:d,musiceventenabled:d,orgaenabled:d,orga:{ratingValue:p},orgaratingenabled:d,eventenabled:d,personenabled:d,musicalbumenabled:d,productenabled:d,product:{ratingValue:p},restaurantenabled:d,restaurant:{acceptsReservations:"yes",priceRange:"$"},facebookenable:f,toc:[{id:q,depth:g,text:r},{id:s,depth:g,text:t},{id:u,depth:g,text:v}],body:{type:"root",children:[{type:b,tag:h,props:{id:q},children:[{type:b,tag:i,props:{ariaHidden:j,href:"#name-mediator",tabIndex:k},children:[{type:b,tag:l,props:{className:[m,n]},children:[]}]},{type:a,value:r}]},{type:a,value:c},{type:b,tag:h,props:{id:s},children:[{type:b,tag:i,props:{ariaHidden:j,href:"#type-behavioural",tabIndex:k},children:[{type:b,tag:l,props:{className:[m,n]},children:[]}]},{type:a,value:t}]},{type:a,value:c},{type:b,tag:h,props:{id:u},children:[{type:b,tag:i,props:{ariaHidden:j,href:"#use-when-you-want-to",tabIndex:k},children:[{type:b,tag:l,props:{className:[m,n]},children:[]}]},{type:a,value:v}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Mediate two objects (colleagues) and how they communicate without the colleagues knowing about eachothers implementations."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"From Wikipedia:"}]},{type:a,value:c},{type:b,tag:w,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:o}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Real World Example:"}]},{type:a,value:c},{type:b,tag:w,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"A general example would be when you talk to someone on your mobile phone, there is a network provider sitting between you and them and your conversation goes through it instead of being directly sent. In this case network provider is mediator."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Typescript Code Example:"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Set up the mediator:"}]},{type:a,value:c},{type:b,tag:x,props:{className:[y]},children:[{type:b,tag:z,props:{className:[A,B]},children:[{type:b,tag:C,props:{},children:[{type:a,value:"interface IChatRoom { \n    showMessage(user: User, message: string)\n}\n\n\u002F\u002F Mediator\nclass ChatRoom implements IChatRoom {\n    showMessage(user: User, message: string) {\n        const time = new Date()\n        const sender = user.getName()\n\n        console.log(`${time}[${sender}]:${message}`)\n    }\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"The colleagues:"}]},{type:a,value:c},{type:b,tag:x,props:{className:[y]},children:[{type:b,tag:z,props:{className:[A,B]},children:[{type:b,tag:C,props:{},children:[{type:a,value:"class User {\n    constructor(private name: string, private chatMediator: IChatRoom) {\n    }\n    \n    getName() {\n        return this.name\n    }\n    \n    send(message) {\n        this.chatMediator.showMessage(this, message)\n    }\n}\n\nconst mediator = new ChatRoom()\n\nconst john = new User('John Doe', mediator)\nconst jane = new User('Jane Doe', mediator)\n\njohn.send('Hi there!')\njane.send('Hey!')\n"}]}]}]},{type:a,value:c},{type:b,tag:"script",props:{async:f,src:"\u002F\u002Fjsfiddle.net\u002Fharps116\u002F9bj7xyuh\u002F10\u002Fembed\u002Fjs\u002F"},children:[]}]},dir:"\u002Farchive",path:"\u002Farchive\u002Fmediator-pattern",extension:".md",createdAt:D,updatedAt:D}}],fetch:[],mutations:void 0}}("text","element","\n",false,"p",true,2,"h2","a","true",-1,"span","icon","icon-link","In software engineering, the mediator pattern defines an object that encapsulates how a set of objects interact. This pattern is considered to be a behavioral pattern due to the way it can alter the program's running behavior.",2.5,"name-mediator","Name: Mediator","type-behavioural","Type: Behavioural","use-when-you-want-to","Use when you want to:","blockquote","div","nuxt-content-highlight","pre","language-text","line-numbers","code","2020-12-03T07:40:38.697Z")));