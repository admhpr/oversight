__NUXT_JSONP__("/archive/visitor-pattern", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D){return {data:[{page:{slug:"visitor-pattern",title:"The Visitor Pattern",date:"2019-05-24T15:16",desc:u,taxonomy:{category:["blog"],tag:["design patterns","behavioural"]},twitterenable:l,twittercardoptions:"summary",articleenabled:d,musiceventenabled:d,orgaenabled:d,orga:{ratingValue:v},orgaratingenabled:d,eventenabled:d,personenabled:d,musicalbumenabled:d,productenabled:d,product:{ratingValue:v},restaurantenabled:d,restaurant:{acceptsReservations:"yes",priceRange:"$"},facebookenable:l,toc:[{id:w,depth:m,text:x},{id:y,depth:m,text:z},{id:A,depth:m,text:B}],body:{type:"root",children:[{type:b,tag:n,props:{id:w},children:[{type:b,tag:o,props:{ariaHidden:p,href:"#name-visitor",tabIndex:q},children:[{type:b,tag:r,props:{className:[s,t]},children:[]}]},{type:a,value:x}]},{type:a,value:c},{type:b,tag:n,props:{id:y},children:[{type:b,tag:o,props:{ariaHidden:p,href:"#type-behavioural",tabIndex:q},children:[{type:b,tag:r,props:{className:[s,t]},children:[]}]},{type:a,value:z}]},{type:a,value:c},{type:b,tag:n,props:{id:A},children:[{type:b,tag:o,props:{ariaHidden:p,href:"#use-when-you-want-to",tabIndex:q},children:[{type:b,tag:r,props:{className:[s,t]},children:[]}]},{type:a,value:B}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Add operations to an object without modifying the object."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"From Wikipedia:"}]},{type:a,value:c},{type:b,tag:C,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:u}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Real World Example:"}]},{type:a,value:c},{type:b,tag:C,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"A zoo simulation where we have several different kinds of animals and we have to make them create a sound"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Typescript Code Example:"}]},{type:a,value:c},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:k,props:{},children:[{type:a,value:"\u002F\u002F Visitee\ninterface Animal {\n    accept(operation: AnimalOperation);\n}\n\n\u002F\u002F Visitor\ninterface AnimalOperation {\n    visitMonkey(monkey: Monkey);\n    visitLion(lion: Lion);\n    visitDolphin(dolphin: Dolphin);\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Implementation"}]},{type:a,value:c},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:k,props:{},children:[{type:a,value:"class Monkey implements Animal {\n    public shout() {\n        console.log('Ooh oo aa aa!');\n    }\n\n    public accept(operation: AnimalOperation) {\n        operation.visitMonkey(this);\n    }\n}\n\nclass Lion implements Animal {\n    public roar() {\n        console.log('Roaaar!');\n    }\n\n    public accept(operation: AnimalOperation) {\n        operation.visitLion(this);\n    }\n}\n\nclass Dolphin implements Animal {\n    public speak() {\n        console.log('Tuut tuttu tuutt!');\n    }\n\n    public accept(operation: AnimalOperation) {\n        operation.visitDolphin(this);\n    }\n}\n\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"implement our visitor to add jump and sound behaviour:"}]},{type:a,value:c},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:k,props:{},children:[{type:a,value:"class Speak implements AnimalOperation {\n    public visitMonkey(monkey: Monkey) {\n        monkey.shout();\n    }\n\n    public visitLion(lion: Lion) {\n        lion.roar();\n    }\n\n    public visitDolphin(dolphin: Dolphin) {\n        dolphin.speak();\n    }\n}\n\nclass Jump implements AnimalOperation {\n    public visitMonkey(monkey: Monkey) {\n        console.log('Jumped 20 feet high! on to the tree!')\n    }\n\n    public visitLion(lion: Lion) {\n        console.log('Jumped 7 feet! Back on the ground!')\n    }\n\n    public visitDolphin(dolphin: Dolphin) {\n        console.log('Walked on water a little and disappeared')\n    }\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Usage:"}]},{type:a,value:c},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:k,props:{},children:[{type:a,value:"const monkey = new Monkey()\nconst lion = new Lion()\nconst dolphin = new Dolphin()\n\nconst speak = new Speak()\nconst jump = new Jump()\n\nmonkey.accept(speak)   \u002F\u002F Ooh oo aa aa!\nmonkey.accept(jump)    \u002F\u002F Jumped 20 feet high! on to the tree!\n\nlion.accept(speak)     \u002F\u002F Roaaar!\nlion.accept(jump)      \u002F\u002F Jumped 7 feet! Back on the ground! \n\ndolphin.accept(speak)  \u002F\u002F Tuut tutt tuutt! \ndolphin.accept(jump)   \u002F\u002F Walked on water a little and disappeared\n"}]}]}]},{type:a,value:c},{type:b,tag:"script",props:{async:l,src:"\u002F\u002Fjsfiddle.net\u002Fharps116\u002Fcr5gwks1\u002F3\u002Fembed\u002Fjs\u002F"},children:[]}]},dir:"\u002Farchive",path:"\u002Farchive\u002Fvisitor-pattern",extension:".md",createdAt:D,updatedAt:D}}],fetch:[],mutations:void 0}}("text","element","\n",false,"p","div","nuxt-content-highlight","pre","language-text","line-numbers","code",true,2,"h2","a","true",-1,"span","icon","icon-link","In object-oriented programming and software engineering, the visitor design pattern is a way of separating an algorithm from an object structure on which it operates. A practical result of this separation is the ability to add new operations to existing object structures without modifying those structures. It is one way to follow the open\u002Fclosed principle.",2.5,"name-visitor","Name: Visitor","type-behavioural","Type: Behavioural","use-when-you-want-to","Use when you want to:","blockquote","2020-12-03T07:39:51.694Z")));