__NUXT_JSONP__("/archive/prototype-pattern", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x){return {data:[{page:{slug:"prototype-pattern",title:"The Prototype Pattern",published:f,desc:p,date:"2019-01-13T00:00",taxonomy:{category:["blog"],tag:["design patterns","creational"]},twitterenable:f,twittercardoptions:"summary",articleenabled:d,musiceventenabled:d,orgaenabled:d,orga:{ratingValue:q},orgaratingenabled:d,eventenabled:d,personenabled:d,musicalbumenabled:d,productenabled:d,product:{ratingValue:q},restaurantenabled:d,restaurant:{acceptsReservations:"yes",priceRange:"$"},facebookenable:f,toc:[{id:r,depth:g,text:s},{id:t,depth:g,text:u},{id:v,depth:g,text:w}],body:{type:"root",children:[{type:b,tag:h,props:{id:r},children:[{type:b,tag:i,props:{ariaHidden:j,href:"#name-prototype",tabIndex:k},children:[{type:b,tag:l,props:{className:[m,n]},children:[]}]},{type:a,value:s}]},{type:a,value:c},{type:b,tag:h,props:{id:t},children:[{type:b,tag:i,props:{ariaHidden:j,href:"#type-creational",tabIndex:k},children:[{type:b,tag:l,props:{className:[m,n]},children:[]}]},{type:a,value:u}]},{type:a,value:c},{type:b,tag:h,props:{id:v},children:[{type:b,tag:i,props:{ariaHidden:j,href:"#use-when-you-want-to",tabIndex:k},children:[{type:b,tag:l,props:{className:[m,n]},children:[]}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Clone an object rather than create one"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"From Wikipedia:"}]},{type:a,value:c},{type:b,tag:o,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:p}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Real World Example:"}]},{type:a,value:c},{type:b,tag:o,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Remember dolly? The sheep that was cloned! Well we can clone objects aswell"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Main Purpose:"}]},{type:a,value:c},{type:b,tag:o,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Create object based on an existing object through cloning."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Typescript Code Example:"}]},{type:a,value:c},{type:b,tag:"div",props:{className:["nuxt-content-highlight"]},children:[{type:b,tag:"pre",props:{className:["language-text","line-numbers"]},children:[{type:b,tag:"code",props:{},children:[{type:a,value:"enum SheepType{ \n    mountain,\n    fluffy,\n    friendly,\n}\n\nclass Sheep{ \n    constructor(private _name: string, private _category: SheepType) { \n\n    }\n\n    setName(name: string) { \n        this._name = name;\n    }\n\n    setCategory(category: SheepType) { \n        this._category = category\n    }\n\n    identify() { \n        return \"Hi my name is \" + this._name + \" and I'm a \" + SheepType[this._category] + \" sheep.\"\n    }\n\n    static clone(sheep: Sheep): Sheep { \n        let copy = \u003CSheep\u003E{}\n        \n        return new Sheep(sheep._name, sheep._category)\n    }\n}\nconst sheepy = new Sheep('sheepy', SheepType.mountain);\n\nconst dolly = Sheep.clone(sheepy);\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Full Example:"}]},{type:a,value:c},{type:b,tag:"script",props:{async:f,src:"\u002F\u002Fjsfiddle.net\u002Fharps116\u002Fp1yq2c7n\u002F8\u002Fembed\u002Fjs,result\u002F"},children:[]}]},dir:"\u002Farchive",path:"\u002Farchive\u002Fprototype-pattern",extension:".md",createdAt:x,updatedAt:x}}],fetch:[],mutations:void 0}}("text","element","\n",false,"p",true,2,"h2","a","true",-1,"span","icon","icon-link","blockquote","The prototype pattern is a creational design pattern in software development. It is used when the type of objects to create is determined by a prototypical instance, which is cloned to produce new objects.",2.5,"name-prototype","Name: Prototype","type-creational","Type: Creational","use-when-you-want-to","Use when you want to:","2020-12-03T09:01:27.589Z")));