__NUXT_JSONP__("/archive/javascript-101-better-event-handling", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A){return {data:[{post:{slug:"javascript-101-better-event-handling",title:"JavaScript 101  ~  Better Event Handling",desc:"In a previous post I took at look event handling in JavaScript. The title of this post is a clue you can expect more of the same in this one.This time, my goal is to show that there is merit to spending some time refactoring and tidying up code once your idea has been stubbed out and is working, and hopefully in the following example I can make my case.",date:"2017-06-01T11:23",taxonomy:{category:["blog"],tag:["javascript","web development","javascript 101"]},googledesc:"A better way to event handle. ( from the previous post anyway ).",twittercardoptions:"summary",articleenabled:d,article:{"@context":g,"@type":"NewsArticle",image:{"@type":h},publisher:{"@type":"Organization",logo:{"@type":h}}},musiceventenabled:d,orgaenabled:d,orga:{ratingValue:2.5},orgaratingenabled:d,eventenabled:d,personenabled:d,restaurantenabled:d,restaurant:{acceptsReservations:"yes",priceRange:"$","@context":g,"@type":"Restaurant",address:{"@type":i}},facebookenable:j,person:{"@context":g,"@type":"person",address:{"@type":i}},event:{"@context":g,"@type":"Event",location:{"@type":"Place"}},musicalbum:{"@context":g,"@type":"MusicAlbum",byArtist:{"@type":"MusicGroup"}},toc:[{id:k,depth:l,text:m},{id:n,depth:l,text:o}],body:{type:"root",children:[{type:b,tag:e,props:{},children:[{type:b,tag:"img",props:{alt:"",src:".\u002Fimages\u002F101.png?cropResize=300,300"},children:[]}]},{type:a,value:c},{type:b,tag:p,props:{id:k},children:[{type:b,tag:f,props:{href:"#a-better-way-to-event-handle",ariaHidden:q,tabIndex:r},children:[{type:b,tag:s,props:{className:[t,u]},children:[]}]},{type:a,value:m}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"In a "},{type:b,tag:f,props:{href:"http:\u002F\u002Fwww.adamharpur.com\u002Fblog\u002Fjs-101-event-handling",rel:[v,w,x],target:y},children:[{type:a,value:"previous post"}]},{type:a,value:" I took at look event handling in JavaScript. The title of this post is a clue you can expect more of the same in this one.This time, my goal is to show that there is merit to spending some time refactoring and tidying up code once your idea has been stubbed out and is working, and hopefully in the following example I can make my case."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Note: there is no difference in functionality of the buttons, they just handle the click event differently.The JavaScript is heavily commented and is worth reviewing if you would like a deeper understanding of what is happening."}]},{type:a,value:c},{type:b,tag:e,props:{dataHeight:"265",dataThemeId:"0",dataSlugHash:"XgbRwG",dataDefaultTab:"js,result",dataUser:"harps116",dataEmbedVersion:"2",dataPenTitle:z,className:["codepen"]},children:[{type:a,value:"See the Pen "},{type:b,tag:f,props:{href:"https:\u002F\u002Fcodepen.io\u002Fharps116\u002Fpen\u002FXgbRwG\u002F"},children:[{type:a,value:z}]},{type:a,value:" by Adam Harpur ("},{type:b,tag:f,props:{href:"https:\u002F\u002Fcodepen.io\u002Fharps116"},children:[{type:a,value:"@harps116"}]},{type:a,value:") on "},{type:b,tag:f,props:{href:"https:\u002F\u002Fcodepen.io"},children:[{type:a,value:"CodePen"}]},{type:a,value:"."}]},{type:a,value:c},{type:b,tag:"script",props:{async:j,src:"https:\u002F\u002Fproduction-assets.codepen.io\u002Fassets\u002Fembed\u002Fei.js"},children:[]},{type:a,value:c},{type:b,tag:p,props:{id:n},children:[{type:b,tag:f,props:{href:"#a-summary-of-what-is-happening",ariaHidden:q,tabIndex:r},children:[{type:b,tag:s,props:{className:[t,u]},children:[]}]},{type:a,value:o}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"In technique one we are grabbing the element we want to listen on, then we add an event listener to that element, then we trigger a function on that event."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"There is a cleaner and more explicit way, in technique two we add the 'onclick' attribute to the element and call a method of a 'handler' object which stores all potential events that could be triggered and returns the corresponding function.This greatly reducing the need to repeat code and makes the whole script more legible, not only for anyone else that reads your code but also for your future self."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"This post was inspired by content fron this amazing and free course:\n"},{type:b,tag:f,props:{href:"https:\u002F\u002Fwatchandcode.com\u002Fp\u002Fpractical-javascript",rel:[v,w,x],target:y},children:[{type:a,value:"Practical JavaScript | Watch and Code"}]}]}]},dir:"\u002Farchive",path:"\u002Farchive\u002Fjavascript-101-better-event-handling",extension:".md",createdAt:A,updatedAt:A}}],fetch:[],mutations:void 0}}("text","element","\n",false,"p","a","http:\u002F\u002Fschema.org\u002F","ImageObject","PostalAddress",true,"a-better-way-to-event-handle",3,"A better way to event handle","a-summary-of-what-is-happening","a summary of what is happening","h3","true",-1,"span","icon","icon-link","nofollow","noopener","noreferrer","_blank","Handler object in plain ol' JavaScript","2021-04-22T13:21:41.020Z")));